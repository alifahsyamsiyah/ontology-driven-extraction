[PrefixDeclaration]
:		http://www.example.org/
:		http://www.example.org/
owl:		http://www.w3.org/2002/07/owl#
rdf:		http://www.w3.org/1999/02/22-rdf-syntax-ns#
xsd:		http://www.w3.org/2001/XMLSchema#
rdfs:		http://www.w3.org/2000/01/rdf-schema#

[SourceDeclaration]
sourceUri	sakilas
connectionUrl	jdbc:mysql://localhost/sakilas
username	root
password	root
driverClass	com.mysql.jdbc.Driver

[MappingDeclaration] @collection [[
mappingId	trace0
target		:log/log1 :LcontainsT :trace/customer/{t0}/inventory/{t1} . 
source		select customer.`customer_id` as `t0` , rental.`inventory_id` as `t1` from customer, rental, inventory where (customer.`customer_id` = rental.`customer_id`) and (rental.`inventory_id` = inventory.`inventory_id`) 

mappingId	trace1
target		:trace/customer/{t0}/inventory/{t1} :TcontainsA :attr/customer/{t0}/inventory/{t1} . 
source		select customer.`customer_id` as `t0` , rental.`inventory_id` as `t1` from customer, rental, inventory where (customer.`customer_id` = rental.`customer_id`) and (rental.`inventory_id` = inventory.`inventory_id`) 

mappingId	trace2
target		:attr/customer/{t0}/inventory/{t1} :keyA "concept:name"^^xsd:string ; :valueA :{t0}{t1} ; :typeA "literal"^^xsd:string . 
source		select customer.`customer_id` as `t0` , rental.`inventory_id` as `t1` from customer, rental, inventory where (customer.`customer_id` = rental.`customer_id`) and (rental.`inventory_id` = inventory.`inventory_id`) 

mappingId	event3
target		:trace/customer/{t0}/inventory/{t1} :TcontainsE :event/payment/{e0} . 
source		select customer.`customer_id` as `t0` , rental.`inventory_id` as `t1`, payment.`payment_id` as `e0` from customer, rental, inventory, payment where (customer.`customer_id` = rental.`customer_id`) and (rental.`inventory_id` = inventory.`inventory_id`) and (rental.`rental_id` = payment.`rental_id`) 

mappingId	activityname4
target		:event/payment/{e0} :EcontainsA :attr/paytherentalfee/payment/{e0} . :attr/paytherentalfee/payment/{e0} :keyA "concept:name"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA "pay the rental fee"^^xsd:string . 
source		select payment.`payment_id` as `e0` from payment 

mappingId	timestamp5
target		:event/payment/{e0} :EcontainsA :attr/{t0}/payment/{e0} . :attr/{t0}/payment/{e0} :keyA "time:timestamp"^^xsd:string ; :typeA "timestamp"^^xsd:string ; :valueA :{t0} . 
source		select payment.`payment_id` as `e0` , payment.`payment_date` as `t0` from payment 

mappingId	lifecycle6
target		:event/payment/{e0} :EcontainsA :attr/complete/payment/{e0} . :attr/complete/payment/{e0} :keyA "lifecycle:transition"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA "complete"^^xsd:string . 
source		select payment.`payment_id` as `e0` from payment 

mappingId	resource7
target		:event/payment/{e0} :EcontainsA :attr/{r0}/payment/{e0} . :attr/{r0}/payment/{e0} :keyA "org:resource"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA :{r0} . 
source		select payment.`payment_id` as `e0` , staff.`first_name` as `r0` from payment, staff where (payment.`staff_id` = staff.`staff_id`) 

mappingId	event8
target		:trace/customer/{t0}/inventory/{t1} :TcontainsE :event/{a0}/rental/{e0} . 
source		select rental.`customer_id` as `t0` , rental.`inventory_id` as `t1`, rental.`rental_id` as `e0` , rental.`rental_date` as `a0` from rental, customer, inventory where (rental.`customer_id` = customer.`customer_id`) and (rental.`inventory_id` = inventory.`inventory_id`) 

mappingId	activityname9
target		:event/{a0}/rental/{e0} :EcontainsA :attr/rentacd/{a0}/rental/{e0} . :attr/rentacd/{a0}/rental/{e0} :keyA "concept:name"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA "rent a cd"^^xsd:string . 
source		select rental.`rental_id` as `e0` , rental.`rental_date` as `a0` from rental 

mappingId	timestamp10
target		:event/{t0}/rental/{e0} :EcontainsA :attr/{t0}/{t0}/rental/{e0} . :attr/{t0}/{t0}/rental/{e0} :keyA "time:timestamp"^^xsd:string ; :typeA "timestamp"^^xsd:string ; :valueA :{t0} . 
source		select rental.`rental_id` as `e0` , rental.`rental_date` as `t0` from rental 

mappingId	lifecycle11
target		:event/{a0}/rental/{e0} :EcontainsA :attr/complete/{a0}/rental/{e0} . :attr/complete/{a0}/rental/{e0} :keyA "lifecycle:transition"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA "complete"^^xsd:string . 
source		select rental.`rental_id` as `e0` , rental.`rental_date` as `a0` from rental 

mappingId	resource12
target		:event/{a0}/rental/{e0} :EcontainsA :attr/{r0}/{a0}/rental/{e0} . :attr/{r0}/{a0}/rental/{e0} :keyA "org:resource"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA :{r0} . 
source		select rental.`rental_id` as `e0` , rental.`rental_date` as `a0` , customer.`first_name` as `r0` from rental, customer where (rental.`customer_id` = customer.`customer_id`) 

mappingId	event13
target		:trace/customer/{t0}/inventory/{t1} :TcontainsE :event/{a0}/rental/{e0} . 
source		select rental.`customer_id` as `t0` , rental.`inventory_id` as `t1`, rental.`rental_id` as `e0` , rental.`return_date` as `a0` from rental, customer, inventory where (rental.`customer_id` = customer.`customer_id`) and (rental.`inventory_id` = inventory.`inventory_id`) 

mappingId	activityname14
target		:event/{a0}/rental/{e0} :EcontainsA :attr/returnthecd/{a0}/rental/{e0} . :attr/returnthecd/{a0}/rental/{e0} :keyA "concept:name"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA "return the cd"^^xsd:string . 
source		select rental.`rental_id` as `e0` , rental.`return_date` as `a0` from rental 

mappingId	timestamp15
target		:event/{t0}/rental/{e0} :EcontainsA :attr/{t0}/{t0}/rental/{e0} . :attr/{t0}/{t0}/rental/{e0} :keyA "time:timestamp"^^xsd:string ; :typeA "timestamp"^^xsd:string ; :valueA :{t0} . 
source		select rental.`rental_id` as `e0` , rental.`return_date` as `t0` from rental 

mappingId	lifecycle16
target		:event/{a0}/rental/{e0} :EcontainsA :attr/complete/{a0}/rental/{e0} . :attr/complete/{a0}/rental/{e0} :keyA "lifecycle:transition"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA "complete"^^xsd:string . 
source		select rental.`rental_id` as `e0` , rental.`return_date` as `a0` from rental 

mappingId	resource17
target		:event/{a0}/rental/{e0} :EcontainsA :attr/{r0}/{a0}/rental/{e0} . :attr/{r0}/{a0}/rental/{e0} :keyA "org:resource"^^xsd:string ; :typeA "literal"^^xsd:string ; :valueA :{r0} . 
source		select rental.`rental_id` as `e0` , rental.`return_date` as `a0` , customer.`first_name` as `r0` from rental, customer where (rental.`customer_id` = customer.`customer_id`) 

]]

